// Settings Remote - General Settings Page
// Main configuration interface

screen(id="general-settings", initial=true, device=desktop) {
    header {
        text(fontSize*=1.8) { Settings }
        text(style=muted) { Configure your Code Agent Portal }
    }
    
    // Settings tabs
    tabs {
        tab(label="General") {
            layout(type=grid, cols=2) {
                // Application Settings
                panel {
                    text(fontSize*=1.3) { Application Settings }
                    
                    field(label="API URL", value="https://api.codeagent.local", prefix="icon:link")
                    field(label="WebSocket URL", value="wss://ws.codeagent.local", prefix="icon:plug")
                    
                    field(label="Theme", type=dropdown, options="Light,Dark,Auto (System)", value="Auto (System)")
                    field(label="Language", type=dropdown, options="English,Spanish,French,German,Japanese,Chinese", value="English")
                    field(label="Timezone", type=dropdown, options="UTC,EST,PST,CET,JST", value="UTC")
                    
                    field(label="Date Format", type=dropdown, options="MM/DD/YYYY,DD/MM/YYYY,YYYY-MM-DD", value="MM/DD/YYYY")
                    field(label="Time Format", type=dropdown, options="12-hour,24-hour", value="12-hour")
                }
                
                // Notification Settings
                panel {
                    text(fontSize*=1.3) { Notifications }
                    
                    field(label="Enable desktop notifications", type=toggle, checked=true)
                    field(label="Enable email notifications", type=toggle, checked=true)
                    field(label="Enable sound alerts", type=toggle, checked=false)
                    
                    field(label="Email Address", type=email, value="user@example.com", prefix="icon:envelope")
                    
                    text(fontSize*=1.1) { Notify me when: }
                    field(label="Agent completes task", type=checkbox, checked=true)
                    field(label="Agent encounters error", type=checkbox, checked=true)
                    field(label="Project status changes", type=checkbox, checked=true)
                    field(label="Resource limits reached", type=checkbox, checked=true)
                    field(label="New updates available", type=checkbox, checked=false)
                }
            }
            
            // Performance Settings
            panel {
                text(fontSize*=1.3) { Performance }
                
                layout(type=grid, cols=2) {
                    field(label="Auto-refresh dashboard", type=toggle, checked=true)
                    field(label="Refresh interval (seconds)", type=number, value="30")
                    field(label="Enable animations", type=toggle, checked=true)
                    field(label="Show tooltips", type=toggle, checked=true)
                    field(label="Cache API responses", type=toggle, checked=true)
                    field(label="Cache duration (minutes)", type=number, value="5")
                }
            }
            
            toolbar(style=transparent) {
                expander
                button(style=secondary, label="Reset to Defaults")
                button(style=primary, label="Save Changes", icon="save")
            }
        }
        
        tab(label="Providers") {
            // Provider management
            panel {
                row {
                    text(fontSize*=1.3) { LLM Providers }
                    expander
                    button(style=primary, label="Add Provider", icon="plus")
                }
            }
            
            // Anthropic Configuration
            card {
                row {
                    icon(iconName="robot", style=primary, size=large)
                    layout(type=column, align=left) {
                        text(fontSize*=1.2) { Anthropic }
                        row {
                            field(label="", type=toggle, checked=true)
                            text { Enabled }
                        }
                    }
                    expander
                    button(icon="trash", label="", style=danger)
                }
                
                layout(type=grid, cols=2) {
                    field(label="API Key", type=password, value="sk-ant-xxxxxxxxxxxxx", prefix="icon:key")
                    field(label="Model", type=dropdown, options="Claude 3 Opus,Claude 3 Sonnet,Claude 3 Haiku", value="Claude 3 Opus")
                    field(label="Max Tokens", type=number, value="4096")
                    field(label="Temperature", type=number, value="0.7")
                    field(label="Timeout (seconds)", type=number, value="60")
                    field(label="Rate Limit (req/min)", type=number, value="100")
                }
                
                toolbar(style=transparent) {
                    button(style=secondary, label="Test Connection", icon="plug")
                    expander
                    text(style=success) { ✓ Connected }
                }
            }
            
            // OpenAI Configuration
            card {
                row {
                    icon(iconName="robot", style=success, size=large)
                    layout(type=column, align=left) {
                        text(fontSize*=1.2) { OpenAI }
                        row {
                            field(label="", type=toggle, checked=true)
                            text { Enabled }
                        }
                    }
                    expander
                    button(icon="trash", label="", style=danger)
                }
                
                layout(type=grid, cols=2) {
                    field(label="API Key", type=password, value="sk-xxxxxxxxxxxxx", prefix="icon:key")
                    field(label="Model", type=dropdown, options="GPT-4 Turbo,GPT-4,GPT-3.5 Turbo", value="GPT-4 Turbo")
                    field(label="Max Tokens", type=number, value="4096")
                    field(label="Temperature", type=number, value="0.7")
                    field(label="Timeout (seconds)", type=number, value="60")
                    field(label="Rate Limit (req/min)", type=number, value="100")
                }
                
                toolbar(style=transparent) {
                    button(style=secondary, label="Test Connection", icon="plug")
                    expander
                    text(style=success) { ✓ Connected }
                }
            }
            
            // Ollama Configuration
            card {
                row {
                    icon(iconName="robot", style=warning, size=large)
                    layout(type=column, align=left) {
                        text(fontSize*=1.2) { Ollama (Local) }
                        row {
                            field(label="", type=toggle, checked=false)
                            text { Disabled }
                        }
                    }
                    expander
                    button(icon="trash", label="", style=danger)
                }
                
                layout(type=grid, cols=2) {
                    field(label="Host", value="http://localhost:11434", prefix="icon:server")
                    field(label="Model", type=dropdown, options="llama3,mistral,codellama,phi", value="llama3")
                    field(label="Max Tokens", type=number, value="2048")
                    field(label="Temperature", type=number, value="0.7")
                    field(label="Timeout (seconds)", type=number, value="120")
                    field(label="Concurrent Requests", type=number, value="1")
                }
                
                toolbar(style=transparent) {
                    button(style=secondary, label="Test Connection", icon="plug")
                    expander
                    text(style=warning) { ✗ Not connected }
                }
            }
        }
        
        tab(label="Security") {
            // Security settings
            panel {
                text(fontSize*=1.3) { Security Configuration }
                
                layout(type=grid, cols=2) {
                    // Authentication
                    panel {
                        text(fontSize*=1.2) { Authentication }
                        
                        field(label="Require authentication", type=toggle, checked=true)
                        field(label="Session timeout (minutes)", type=number, value="30")
                        field(label="Remember me duration (days)", type=number, value="7")
                        field(label="Two-factor authentication", type=toggle, checked=false)
                        field(label="SSO Provider", type=dropdown, options="None,Google,GitHub,Azure AD,Custom SAML", value="None")
                    }
                    
                    // Sandbox Settings
                    panel {
                        text(fontSize*=1.2) { Sandbox Execution }
                        
                        field(label="Sandbox Level", type=dropdown, options="None (Direct),Container (Docker),Virtual Machine", value="Container (Docker)")
                        field(label="Network isolation", type=toggle, checked=true)
                        field(label="File system isolation", type=toggle, checked=true)
                        field(label="Resource limits", type=toggle, checked=true)
                        field(label="Max execution time (min)", type=number, value="60")
                    }
                }
                
                // API Security
                panel {
                    text(fontSize*=1.2) { API Security }
                    
                    layout(type=grid, cols=2) {
                        field(label="Enable API rate limiting", type=toggle, checked=true)
                        field(label="Rate limit (req/hour)", type=number, value="1000")
                        field(label="Enable CORS", type=toggle, checked=true)
                        field(label="Allowed origins", placeholder="https://example.com, https://app.example.com")
                        field(label="API key rotation", type=toggle, checked=false)
                        field(label="Rotation period (days)", type=number, value="90")
                    }
                }
                
                // Audit & Logging
                panel {
                    text(fontSize*=1.2) { Audit & Logging }
                    
                    layout(type=grid, cols=2) {
                        field(label="Enable audit logging", type=toggle, checked=true)
                        field(label="Log retention (days)", type=number, value="90")
                        field(label="Log sensitive data", type=toggle, checked=false)
                        field(label="Export logs to SIEM", type=toggle, checked=false)
                        field(label="Alert on suspicious activity", type=toggle, checked=true)
                        field(label="Encrypt logs at rest", type=toggle, checked=true)
                    }
                }
            }
            
            toolbar(style=transparent) {
                expander
                button(style=warning, label="Generate Security Report", icon="shield-alt")
                button(style=primary, label="Save Security Settings", icon="lock")
            }
        }
        
        tab(label="Advanced") {
            // Advanced settings
            panel {
                text(fontSize*=1.3) { Advanced Configuration }
                text(style=warning) { ⚠️ Modifying these settings may affect system stability }
            }
            
            layout(type=grid, cols=2) {
                // System Resources
                panel {
                    text(fontSize*=1.2) { System Resources }
                    
                    field(label="Max concurrent agents", type=number, value="10")
                    field(label="Max memory per agent (MB)", type=number, value="512")
                    field(label="Max CPU per agent (%)", type=number, value="25")
                    field(label="Agent timeout (seconds)", type=number, value="300")
                    field(label="Queue size limit", type=number, value="100")
                    field(label="Worker threads", type=number, value="4")
                }
                
                // Database Settings
                panel {
                    text(fontSize*=1.2) { Database }
                    
                    field(label="Connection string", value="postgresql://localhost:5432/codeagent")
                    field(label="Connection pool size", type=number, value="20")
                    field(label="Query timeout (seconds)", type=number, value="30")
                    field(label="Enable query caching", type=toggle, checked=true)
                    field(label="Auto-vacuum", type=toggle, checked=true)
                    field(label="Backup frequency", type=dropdown, options="Hourly,Daily,Weekly", value="Daily")
                }
            }
            
            // Experimental Features
            panel {
                text(fontSize*=1.2) { Experimental Features }
                text(style=muted) { These features are in beta and may be unstable }
                
                layout(type=grid, cols=2) {
                    field(label="Multi-agent collaboration", type=toggle, checked=false)
                    field(label="Auto-scaling agents", type=toggle, checked=false)
                    field(label="Predictive caching", type=toggle, checked=false)
                    field(label="WebAssembly plugins", type=toggle, checked=false)
                    field(label="GraphQL API", type=toggle, checked=false)
                    field(label="Real-time collaboration", type=toggle, checked=false)
                }
            }
            
            // Diagnostics
            panel {
                text(fontSize*=1.2) { Diagnostics }
                
                toolbar(style=transparent) {
                    button(style=secondary, label="View Logs", icon="file-alt")
                    button(style=secondary, label="System Health", icon="heartbeat")
                    button(style=secondary, label="Performance Metrics", icon="chart-line")
                    button(style=warning, label="Clear Cache", icon="broom")
                    button(style=danger, label="Reset All Settings", icon="undo")
                }
            }
        }
    }
}