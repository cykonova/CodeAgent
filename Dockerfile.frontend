# Build stage
FROM node:20-alpine AS build

WORKDIR /app

# Copy package files
COPY src/frontend/package*.json ./
COPY src/frontend/nx.json ./
COPY src/frontend/tsconfig.base.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY src/frontend/ ./

# Build just the shell application (it includes all routes via lazy loading)
RUN npx nx build shell --configuration=production

# Runtime stage - using nginx to serve the static files
FROM nginx:alpine

# Copy the shell app (includes all lazy-loaded routes)
COPY --from=build /app/dist/apps/shell/browser /usr/share/nginx/html

# Create nginx configuration for SPA routing
RUN echo 'server { \
    listen 80; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html; \
        try_files $uri $uri/ /index.html; \
    } \
    location /api { \
        proxy_pass http://gateway:5000; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    location /ws { \
        proxy_pass http://gateway:5000; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]