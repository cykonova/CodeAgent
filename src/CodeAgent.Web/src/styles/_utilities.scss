// Utility Classes and Mixins
// ===========================

// Spacing utility classes
@each $name, $size in (
  'xs': var(--spacing-xs),
  'sm': var(--spacing-sm),
  'md': var(--spacing-md),
  'lg': var(--spacing-lg),
  'xl': var(--spacing-xl),
  'xxl': var(--spacing-xxl)
) {
  // Margin utilities
  .m-#{$name} { margin: #{$size} !important; }
  .mt-#{$name} { margin-top: #{$size} !important; }
  .mr-#{$name} { margin-right: #{$size} !important; }
  .mb-#{$name} { margin-bottom: #{$size} !important; }
  .ml-#{$name} { margin-left: #{$size} !important; }
  .mx-#{$name} { 
    margin-left: #{$size} !important; 
    margin-right: #{$size} !important; 
  }
  .my-#{$name} { 
    margin-top: #{$size} !important; 
    margin-bottom: #{$size} !important; 
  }
  
  // Padding utilities
  .p-#{$name} { padding: #{$size} !important; }
  .pt-#{$name} { padding-top: #{$size} !important; }
  .pr-#{$name} { padding-right: #{$size} !important; }
  .pb-#{$name} { padding-bottom: #{$size} !important; }
  .pl-#{$name} { padding-left: #{$size} !important; }
  .px-#{$name} { 
    padding-left: #{$size} !important; 
    padding-right: #{$size} !important; 
  }
  .py-#{$name} { 
    padding-top: #{$size} !important; 
    padding-bottom: #{$size} !important; 
  }
  
  // Gap utilities
  .gap-#{$name} { gap: #{$size} !important; }
}

// Layout utilities
.container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);
  
  &--xs { max-width: var(--container-xs); }
  &--sm { max-width: var(--container-sm); }
  &--md { max-width: var(--container-md); }
  &--lg { max-width: var(--container-lg); }
  &--xl { max-width: var(--container-xl); }
  &--fluid { max-width: 100%; }
}

// Display utilities
.d-none { display: none !important; }
.d-block { display: block !important; }
.d-inline-block { display: inline-block !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }
.d-grid { display: grid !important; }

// Flexbox utilities
.flex-row { flex-direction: row !important; }
.flex-column { flex-direction: column !important; }
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.justify-start { justify-content: flex-start !important; }
.justify-center { justify-content: center !important; }
.justify-end { justify-content: flex-end !important; }
.justify-between { justify-content: space-between !important; }
.justify-around { justify-content: space-around !important; }
.align-start { align-items: flex-start !important; }
.align-center { align-items: center !important; }
.align-end { align-items: flex-end !important; }
.align-stretch { align-items: stretch !important; }
.flex-fill { flex: 1 1 auto !important; }
.flex-grow-0 { flex-grow: 0 !important; }
.flex-grow-1 { flex-grow: 1 !important; }
.flex-shrink-0 { flex-shrink: 0 !important; }
.flex-shrink-1 { flex-shrink: 1 !important; }

// Text utilities
.text-left { text-align: left !important; }
.text-center { text-align: center !important; }
.text-right { text-align: right !important; }
.text-justify { text-align: justify !important; }
.text-uppercase { text-transform: uppercase !important; }
.text-lowercase { text-transform: lowercase !important; }
.text-capitalize { text-transform: capitalize !important; }
.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Font weight utilities
.font-light { font-weight: var(--font-weight-light) !important; }
.font-regular { font-weight: var(--font-weight-regular) !important; }
.font-medium { font-weight: var(--font-weight-medium) !important; }
.font-bold { font-weight: var(--font-weight-bold) !important; }

// Shadow utilities
.shadow-none { box-shadow: none !important; }
.shadow-sm { box-shadow: var(--shadow-sm) !important; }
.shadow-md { box-shadow: var(--shadow-md) !important; }
.shadow-lg { box-shadow: var(--shadow-lg) !important; }
.shadow-xl { box-shadow: var(--shadow-xl) !important; }

// Border radius utilities
.rounded-none { border-radius: 0 !important; }
.rounded-sm { border-radius: var(--radius-sm) !important; }
.rounded-md { border-radius: var(--radius-md) !important; }
.rounded-lg { border-radius: var(--radius-lg) !important; }
.rounded-full { border-radius: var(--radius-full) !important; }

// Position utilities
.position-static { position: static !important; }
.position-relative { position: relative !important; }
.position-absolute { position: absolute !important; }
.position-fixed { position: fixed !important; }
.position-sticky { position: sticky !important; }

// Width and height utilities
.w-100 { width: 100% !important; }
.h-100 { height: 100% !important; }
.mw-100 { max-width: 100% !important; }
.mh-100 { max-height: 100% !important; }

// Overflow utilities
.overflow-auto { overflow: auto !important; }
.overflow-hidden { overflow: hidden !important; }
.overflow-visible { overflow: visible !important; }
.overflow-scroll { overflow: scroll !important; }
.overflow-x-auto { overflow-x: auto !important; }
.overflow-y-auto { overflow-y: auto !important; }

// Cursor utilities
.cursor-pointer { cursor: pointer !important; }
.cursor-default { cursor: default !important; }
.cursor-not-allowed { cursor: not-allowed !important; }

// Mixins
@mixin card-style {
  background: var(--mat-surface-container);
  border-radius: var(--card-radius);
  padding: var(--card-padding);
  box-shadow: var(--card-shadow);
}

@mixin button-base {
  border-radius: var(--button-radius);
  padding: var(--button-padding-y) var(--button-padding-x);
  transition: all var(--transition-base);
  cursor: pointer;
  
  &:hover {
    opacity: 0.9;
  }
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

@mixin truncate-text($lines: 1) {
  overflow: hidden;
  text-overflow: ellipsis;
  
  @if $lines == 1 {
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin responsive($breakpoint) {
  @if $breakpoint == 'sm' {
    @media (min-width: 600px) { @content; }
  } @else if $breakpoint == 'md' {
    @media (min-width: 960px) { @content; }
  } @else if $breakpoint == 'lg' {
    @media (min-width: 1280px) { @content; }
  } @else if $breakpoint == 'xl' {
    @media (min-width: 1920px) { @content; }
  }
}